from aiogram.dispatcher import FSMContext
from aiogram.types import Message, ContentType

from buttons import get_web_app_button, support_contact_button
from config import dp, bot, db, DEFAULT_ACTIVATION_WORD
from states.user import UserAuth
from tools.json_executor import json_settings
from tools.misc import register_new_user


@dp.message_handler(commands=["start"])
async def send_auth_request(message: Message):
    if await db.get_user_by_tg_id(message.from_user.id):
        return await message.answer(
            f"–î–æ–±—Ä–æ–≥–æ –¥–Ω—è, {message.from_user.full_name}. "
            f"–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã —É–∂–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω—ã –≤ —á–∞—Ç–µ. "
            f"–î–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –æ–±—É—á–µ–Ω–∏—é –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ",
            reply_markup=await get_web_app_button()
        )

    await message.answer(
        "<b>–ü—Ä–∏–≤–µ—Ç, –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –Ω–æ–≤–∏—á–æ–∫ –∏–∑ –†–æ—Å–º–æ–ª–æ–¥–µ–∂–∏ ‚≠êÔ∏è</b>\n"
        "–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –≤–≤–µ–¥–∏ –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ –∏–∑ –ø–∏—Å—å–º–∞, "
        "–ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ –æ—Ç HR"
    )
    await UserAuth.input_code_word.set()


@dp.message_handler(content_types=ContentType.PINNED_MESSAGE)
async def delete_service_messages(message: Message):
    await message.delete()


@dp.message_handler(content_types=["text"], state=UserAuth.input_code_word)
async def check_received_code_word(message: Message, state: FSMContext):
    activation_word = await json_settings.get_start_code_word()
    if message.text.lower() in [activation_word.lower(), DEFAULT_ACTIVATION_WORD]:
        await state.finish()
        await register_new_user(message.from_user)
        greeting = await message.answer(
            "–£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è! –í –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –í–∞—Å –∂–¥—ë—Ç... –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–≥—Ä—É–∂–µ–Ω–∏–µ üöÄ\n\n"
            "–ù–∞–∂–º–∏—Ç–µ –∑–µ–ª–µ–Ω—É—é –∫–Ω–æ–ø–∫—É –≤ –ª–µ–≤–æ–º –Ω–∏–∂–Ω–µ–º —É–≥–ª—É —ç–∫—Ä–∞–Ω–∞.\n\n"
            "–ê —ç—Ç–∏ –∫–æ–º–∞–Ω–¥—ã –ø–æ–º–æ–≥—É—Ç –±—É–¥—É—Ç –ø–æ–º–æ–≥–∞—Ç—å –Ω–∞ –ø—Ä–æ—Ç—è–∂–µ–Ω–∏–∏ –≤—Å–µ–≥–æ –æ–±—É—á–µ–Ω–∏—è\n"
            "/contacts - –í–∞–∂–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã –¥–ª—è —Å–≤—è–∑–∏\n"
            "/command2 - ...\n"
            "/command3 - ...\n",
            reply_markup=await get_web_app_button()
        )
        return await bot.pin_chat_message(message.chat.id, greeting.message_id)

    return await message.answer(
        "–•–º–º... –ö–∞–∂–µ—Ç—Å—è, –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ –≤–≤–µ–¥–µ–Ω–æ –Ω–µ–≤–µ—Ä–Ω–æ. "
        "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑"
    )


@dp.message_handler(commands=["contacts"])
async def show_contacts(message: Message):
    await message.answer(
        "8-999-888-77-77 - –ì–æ—Ä—è—á–∞—è –ª–∏–Ω–∏—è\n"
        "8-999-555-33-33 - –û—Ç–¥–µ–ª —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∏",
        reply_markup=support_contact_button
    )
